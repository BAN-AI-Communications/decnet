# Common Makefile elements and configurable bits
###############################################################################
# Where the binaries and man pages will be installed
#
prefix=/usr/local

#
# Where the libraries will be installed.
# If you would prefer this to be /usr/local then you must also add 
# /usr/local/lib to /etc/ld.so.conf or your LD_LIBRARY_PATH
#
libprefix=/usr

#
# Where the configuration data will be installed
#
sysconfprefix=

#
# Choose your debugging options:
# -DNO_FORK        will create single-process servers suitable for debugging.
#                  FAL built like this will *NOT* work with most VMS commands.
# -DNO_BLOCKING    disable sending of many messages in one block
#
DFLAGS=-g
#DFLAGS=-O2

#
# This variable determines whether the programs are statically or dynamically
# linked. By default you get binaries that use the shared libraries. 
# Uncomment it for static binaries
#
#LINKSTATIC=true

#
#
# If you are using gcc 2.8+ or egcs you may like to use these flags to 
# decrease the size of the binary
#
#CXXFLAGS += -fno-rtti -fno-exceptions

#
# For FAL you can redefine the commands used for PRINT/REMOTE and 
# SUBMIT/REMOTE operations. The defaults, shown below commented out
# should be fine though.
# %s is where the filename goes. It MUST be present.
#
#CDEFS+=-DPRINT_COMMAND=\"lpr %s\"
#CDEFS+=-DSUBMIT_COMMAND=\"at -f %s now\"

#------------------------------------------------------------------------------
# You should not need to change anything below this line
#------------------------------------------------------------------------------

MAJOR_VERSION=2
MINOR_VERSION=22
VERSION=$(MAJOR_VERSION).$(MINOR_VERSION)

#
# ARCH code taken from the Linux kernel sources.
#
ARCH := $(shell uname -m | sed -e s/i.86/i386/ -e s/sun4u/sparc64/ -e s/arm.*/arm/ -e s/sa110/arm/)

#
# For RPM & DEB builds
#
ifdef DESTDIR
prefix=$(DESTDIR)/usr
libprefix=$(DESTDIR)/usr
sysconfprefix=$(DESTDIR)
endif

#
# Also for making binary distributions
#
ifdef RELEASE
DFLAGS=-O2
CXXFLAGS += -fno-rtti -fno-exceptions
endif

#
# Look for optional files (who needs autoconf!)
#
ifeq (/usr/lib/libcrypt.a,$(wildcard /usr/lib/libcrypt.a))
LIBCRYPT=-lcrypt
endif

ifeq (/usr/lib/libcrypt.so,$(wildcard /usr/lib/libcrypt.so))
LIBCRYPT=-lcrypt
endif

ifeq (/usr/include/shadow.h,$(wildcard /usr/include/shadow.h))
SHADOWDEFS=-DSHADOW_PWD
endif

ifeq (/dev/pts,$(wildcard /dev/pts))
ifeq (/usr/lib/libutil.a,$(wildcard /usr/lib/libutil.a))
PTSDEFS=-DDNETUSE_DEVPTS
PTSLIBS=-lutil
endif

ifeq (/usr/lib/libutil.so,$(wildcard /usr/lib/libutil.so))
PTSDEFS=-DDNETUSE_DEVPTS
PTSLIBS=-lutil
endif
endif

#
# Miscellaneous compilation flags
#
CC=gcc
CDEFS+=-D_XOPEN_SOURCE -D_BSD_SOURCE -D_GNU_SOURCE -D_SVID_SOURCE
INCLUDES=-I../libdap -I../include
CXXFLAGS+=-pipe -fdollars-in-identifiers -fsigned-char -Wstrict-prototypes -Wall -Wno-unused -Wno-uninitialized $(INCLUDES) -DVERSION=\"$(VERSION)\" $(CDEFS) $(SHADOWDEFS) $(PTSDEFS) $(DFLAGS)
CFLAGS  +=-pipe -fsigned-char -Wstrict-prototypes -Wall -Wno-unused -Wno-uninitialized $(INCLUDES) -DVERSION=\"$(VERSION)\" $(CDEFS) $(SHADOWDEFS) $(PTSDEFS) $(DFLAGS)

# Conditional for shared/static libs
ifdef LINKSTATIC
LIBDNET=../libdnet/libdnet.a
LIBDAEMON=../libdaemon/libdnet_daemon.a $(LIBCRYPT)
LIBDAP=../libdap/libdap.a
DEPLIBDNET=../libdnet/libdnet.a
DEPLIBDAEMON=../libdaemon/libdnet_daemon.a
DEPLIBDAP=../libdap/libdap.a
else
LIBDNET=-L../libdnet -ldnet
LIBDAP=-L../libdap -ldap
LIBDAEMON=-L../libdaemon -ldnet_daemon
DEPLIBDNET=../libdnet/libdnet.so
DEPLIBDAEMON=../libdaemon/libdnet_daemon.so
DEPLIBDAP=../libdap/libdap.so
endif

LIBS=$(LIBDAP) $(LIBDNET)
DEPLIBS=$(DEPLIBDAP) $(DEPLIBDNET)

#
# Defines for programs that need to know prefix information
#
SYSCONF_PREFIX=-DSYSCONF_PREFIX=\"$(sysconfprefix)\"
BINARY_PREFIX=-DBINARY_PREFIX=\"$(prefix)\"

TMPDIR=/tmp
